# -*- coding: utf-8 -*-
"""q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oA1Bz7FLCJUT1GUPKw2RxBggYkj3_S1m
"""

import random
import requests

API_URL = 'http://cryptlygos.pythonanywhere.com' #DON'T Change this
my_id = 25359   # CHANGE this into your ID number

#server communication. Try to get p and t
endpoint = '{}/{}/{}'.format(API_URL, "q1", my_id )
response = requests.get(endpoint) 	
p = 0
t = 0
if response.ok:	
  res = response.json()
  print(res)
  p, t = res['p'], res['t']		#p is your prime number. t is the order of a subgroup. USE THESE TO SOLVE THE QUESTION
else:
  print(response.json())

import math
import random
import fractions

def phi(n):
  myList = []
  amount = 0
  for k in range(1, n + 1):
    if math.gcd(n, k) == 1:
      amount += 1
      myList.append(k)
  return myList

def findGenerator(p):
  group = set(phi(p))
  generators = []
  for element in group:
    generatedElements = set()
    for power in group:
      generatedElements.add((element**power) % p)
    if generatedElements == group:
      generators.append(element)
  return generators

generators = findGenerator(p)

print(generators)

def computeThePowersOfGeneratorsOfGroup(p, t):
  myList = []
  for power in range(1, p):
    if pow(t, power, p) != 1:
      if pow(t, power, p) not in myList:
        myList.append(pow(t, power, p))
    else:
      myList.append(1)
      break 
  return myList

def order_of_subgroups(p):
  order_list = []
  for i in range(1,p):
    if (p-1) % i == 0:
      order_list.append(i)
  return order_list

order_list = order_of_subgroups(p)

for order in order_list:
  if len(computeThePowersOfGeneratorsOfGroup(p, order)) == t:
    print("Generator of the subgroup of order", t, "is", order)

g = 3 		#ATTN: change this into generator you found
gH = 10		#ATTN: change this into generator of the subgroup you found


#You can CHECK result of PART A here
endpoint = '{}/{}/{}/{}'.format(API_URL, "q1ac", my_id, g)
response = requests.put(endpoint) 	
print(response.json())


#You can CHECK result of PART B here
endpoint = '{}/{}/{}/{}'.format(API_URL, "q1bc", my_id, gH )	#gH is generator of your subgroup
response = requests.put(endpoint) 	#check result
print(response.json())