# -*- coding: utf-8 -*-
"""q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wTbi-YqdkqMHP9R0fj00Kg2yoX0qmItY
"""

!pip install BitVector

import random
import requests
from BitVector import BitVector

API_URL = 'http://cryptlygos.pythonanywhere.com'	#DON'T CHANGE THIS
my_id = 25359   									#ATTN: Change this into your id number

endpoint = '{}/{}/{}'.format(API_URL, "poly", my_id )
response = requests.get(endpoint) 	
a = 0
b = 0
if response.ok:	
  res = response.json()
  print(res)
  a, b = res['a'], res['b']		#Binary polynomials a and b
else:
  print(response.json())

##SOLUTION  


modulus = BitVector(bitstring = '100011011')
n = 8
a = BitVector(bitstring = '11001001')
multi_inverse = a.gf_MI(modulus, n)
  
modulus = BitVector(bitstring='100011011') # AES modulus
n = 8
a = BitVector(bitstring='11001001')
b = BitVector(bitstring='11011001')
mult = a.gf_multiply_modular(b, modulus, n)


#You need to calculate c and a_inv
#c = a(x)*b(x)
#a_inv is inverse of a
c = mult
a_inv = multi_inverse		

##END OF SOLUTION

#check result of part a
endpoint = '{}/{}/{}/{}'.format(API_URL, "mult", my_id, c)
response = requests.put(endpoint) 	
print(response.json())

#check result of part b
endpoint = '{}/{}/{}/{}'.format(API_URL, "inv", my_id, a_inv)
response = requests.put(endpoint) 	
print(response.json())